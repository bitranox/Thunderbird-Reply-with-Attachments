"use strict";(self.webpackChunkrwa_docs=self.webpackChunkrwa_docs||[]).push([[296],{7137:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"usage","title":"Usage","description":"Usage","source":"@site/i18n/kk/docusaurus-plugin-content-docs/current/usage.md","sourceDirName":".","slug":"/usage","permalink":"/Thunderbird-Reply-with-Attachments/kk/docs/usage","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1757205965000,"frontMatter":{"id":"usage","title":"Usage","sidebar_label":"Usage"},"sidebar":"docs","previous":{"title":"Configuration","permalink":"/Thunderbird-Reply-with-Attachments/kk/docs/configuration"},"next":{"title":"Compatibility","permalink":"/Thunderbird-Reply-with-Attachments/kk/docs/compatibility"}}');var t=s(4848),i=s(8453);const l={id:"usage",title:"Usage",sidebar_label:"Usage"},r=void 0,d={},c=[{value:"Usage",id:"usage",level:2},{value:"Behavior Details",id:"behavior-details",level:2}];function o(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Reply and the add\u2011on adds originals automatically \u2014 or asks first, if enabled in Options."}),"\n",(0,t.jsx)(n.li,{children:"De\u2011duplicated by filename; SMIME and inline images are always skipped."}),"\n",(0,t.jsx)(n.li,{children:"blacklisted attachments are also skipped (not case sensitive, glob patterns)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"behavior-details",children:"Behavior Details"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Duplicate prevention: The add-on marks the compose tab as processed using a per\u2011tab session value and an in\u2011memory guard. It won\u2019t add originals twice."}),"\n",(0,t.jsx)(n.li,{children:"Respect existing attachments: If the compose already contains some attachments, originals are still added exactly once, skipping filenames that already exist."}),"\n",(0,t.jsxs)(n.li,{children:["Exclusions: SMIME artifacts (e.g. ",(0,t.jsx)(n.code,{children:"smime.p7s"}),", ",(0,t.jsx)(n.code,{children:"application/pkcs7-signature"}),"/",(0,t.jsx)(n.code,{children:"x-pkcs7-signature"}),"/",(0,t.jsx)(n.code,{children:"pkcs7-mime"}),") and inline images are ignored. If nothing qualifies on the first pass, a relaxed fallback re-checks non\u2011SMIME parts."]}),"\n",(0,t.jsx)(n.li,{children:"Blacklist warning (if enabled): When candidates are excluded by your blacklist,\nthe add\u2011on shows a small modal listing the affected files and the matching\npattern(s). This warning also appears in cases where no attachments will be\nadded because everything was excluded."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var a=s(6540);const t={},i=a.createContext(t);function l(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);